{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "YAMAHA RT",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#a"
		},
		{
			"include": "#b"
		},
		{
			"include": "#c"
		},
		{
			"include": "#d"
		},
		{
			"include": "#e"
		},
		{
			"include": "#f"
		},
		{
			"include": "#g"
		},
		{
			"include": "#h"
		},
		{
			"include": "#i"
		},
		{
			"include": "#j"
		},
		{
			"include": "#l"
		},
		{
			"include": "#m"
		},
		{
			"include": "#n"
		},
		{
			"include": "#o"
		},
		{
			"include": "#p"
		},
		{
			"include": "#q"
		},
		{
			"include": "#r"
		},
		{
			"include": "#s"
		},
		{
			"include": "#t"
		},
		{
			"include": "#u"
		},
		{
			"include": "#v"
		},
		{
			"include": "#w"
		},
		{
			"include": "#y"
		},
		{
			"include": "#z"
		},
		{
			"include": "#wlx-a"
		},
		{
			"include": "#wlx-c"
		},
		{
			"include": "#wlx-l"
		},
		{
			"include": "#wlx-r"
		},
		{
			"include": "#wlx-v"
		},
		{
			"include": "#wlx-w"
		},
		{
			"include": "#keyword",
			"comment": "コマンド内で利用される汎用的な予約語など"
		}
	],
	"repository": {
		"comment": {
			"patterns": [
				{
					"match": "^#.*",
					"name": "comment.line"
				},
				{
					"match": "description .*",
					"name": "comment.line"
				},
				{
					"match": "(tunnel|pp) name \\S+",
					"name": "comment.line"
				}
			]
		},
		"keyword": {
			"patterns": [
				{
					"match": "\\b(1000-fdx|(100|10)-(fdx|hdx))\\b",
					"name": "variable.language",
					"comment": "speed"
				},
				{
					"match": "\\b(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/(([1-2]?[0-9])|3[0-2]))?\\b",
					"name": "string",
					"comment": "IPv4 Address"
				},
				{
					"match": "\\b([0-9a-f]{0,4}:){7}[0-9a-f]{0,4}(%\\S+|(/([1-9]?[0-9]|1[0-9]{2}|12[0-8])))?\\b",
					"name": "string",
					"comment": "IPv6 Address省略なし"
				},
				{
					"match": "\\b([0-9a-f]{0,4}:){3}(:|[0-9a-f]{0,4})?(:[0-9a-f]{0,4}){0,4}(%\\S+|(/([1-9]?[0-9]|1[0-9]{2}|12[0-8])))?\\b",
					"name": "string",
					"comment": "IPv6 Address省略あり48bitマスク以上"
				},
				{
					"match": "\\b(dhcp|ra)-prefix@lan([0-9a-f:]+)(%\\S+)?(/([1-9]?[0-9]|1[0-9]{2}|12[0-8]))?\\b",
					"name": "string",
					"comment": "IPv6 プレフィックス表記"
				},
				{
					"match": "\\b(([0-9a-fA-F]{2}(:|-)){5}[0-9a-fA-F]{2})\\b",
					"name": "string",
					"comment": "MACアドレス"
				},
				{
					"match": "\\b(lan\\d+(\\.\\d+|/\\d+)?)\\b",
					"name": "variable.language",
					"comment": "LANインターフェース"
				},
				{
					"match": "\\b(bri[1-2](\\.\\d+)?)\\b",
					"name": "variable.language",
					"comment": "BRIインターフェース"
				},
				{
					"match": "\\b(vlan\\d+|pri1|bridge1|loopback[1-9])\\b",
					"name": "variable.language",
					"comment": "その他インターフェース"
				},
				{
					"match": "\\b(backup|select|enable|disable)\\b",
					"name": "keyword.control",
					"comment": "トンネル等の選択と有効無効の切り替えその他インターフェース"
				},
				{
					"match": "\\b(auto|dhcp|on|off|in|out|only|none|hide|weight|static|any)\\b",
					"name": "keyword.control",
					"comment": "スイッチ"
				},
				{
					"match": "\\b(talk|route|uucp|submission)\\b",
					"name": "variable.language",
					"comment": "port_list"
				},
				{
					"match": "\\b(echo|discard|daytime|chargen|ftp(data)?|ssh|telnet|smtp|time|whois|dns|domain)\\b",
					"name": "variable.language",
					"comment": "port_list"
				},
				{
					"match": "\\b(tftp|gopher|finger|http(s)?|www|pop3|sunrpc|ident|netmeeting|nntp|ntp|ms-(rpc|ds|sql))\\b",
					"name": "variable.language",
					"comment": "port_list"
				},
				{
					"match": "\\b(netbios_(ns|dgm|ssn)|imap|snmp(trap)?|bgp|imap3|ldap)\\b",
					"name": "variable.language",
					"comment": "port_list"
				},
				{
					"match": "\\b(ike|rlogin|rwho|rsh|syslog|printer|rip|ripng)\\b",
					"name": "variable.language",
					"comment": "port_list"
				},
				{
					"match": "\\b(radius|l2tp|pptp|nfs|msblast|ipsec-nat-t|sip|ping(6)?|tcp|udp)\\b",
					"name": "variable.language",
					"comment": "port_list"
				},
				{
					"match": "\\b(pass|reject|restrict)(-log|-nolog)?\\b",
					"name": "keyword.control",
					"comment": "pass_reject"
				},
				{
					"match": "\\b(icmp|tcp|udp|gre|esp|ah|icmp6)\\b",
					"name": "variable.language",
					"comment": "protocol"
				},
				{
					"match": "\\b(icmp(-error|-info)|tcp(syn|fin|rst)|established)\\b",
					"name": "variable.language",
					"comment": "protocol"
				},
				{
					"match": "\\b(([0-1][0-9]|2[0-3]):[0-5][0-9])\\b",
					"name": "constant.numeric",
					"comment": "時間"
				},
				{
					"match": "\\b(\\d+)\\b",
					"name": "constant.numeric",
					"comment": "数字"
				},
				{
					"match": "\\b(\\S+)(!=|=)(\\d+)\\b",
					"captures": {
						"1": {
							"name": "variable.language"
						},
						"2": {
							"name": "keyword.operator"
						},
						"3": {
							"name": "constant.numeric"
						}
					}
				},
				{
					"match": "\\b(\\S+)(!=|=)(on|off)\\b",
					"captures": {
						"1": {
							"name": "variable.language"
						},
						"2": {
							"name": "keyword.operator"
						},
						"3": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "\\b(\\S+)(!=|=)(\\S+)\\b",
					"captures": {
						"1": {
							"name": "variable.language"
						},
						"2": {
							"name": "keyword.operator"
						},
						"3": {
							"name": "string"
						}
					}
				}
			]
		},
		"a": {
			"patterns": [
				{
					"match": "account threshold (\\S+)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				},
				{
					"match": "administrator radius auth (on|only|off)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "administrator( password)?( encrypted)?",
					"name": "entity.name.function"
				},
				{
					"match": "alarm (batch|entire|http (revision-up|upload)|lua|mobile|sd|startup|usbhost) (on|off)",
					"name": "entity.name.function",
					"captures": {
						"3": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "alias (\\S+)(=)(\\S+)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword"
						},
						"2": {
							"name": "keyword.operator"
						},
						"3": {
							"name": "keyword"
						}
					}
				},
				{
					"match": "analog arrive (another-device|global|ignore-subaddress|ring-while-talking|without-subaddress) permit",
					"name": "entity.name.function"
				},
				{
					"match": "analog arrive (incoming-signal|incoming-signal timing pb|inumber-port|number display|priority|restrict|restrict list|ringer-type list|without-calling-number)",
					"name": "entity.name.function"
				},
				{
					"match": "analog call (route-table|route)",
					"name": "entity.name.function"
				},
				{
					"match": "analog (device type|disc-signal|end-of-dialing-code)",
					"name": "entity.name.function"
				},
				{
					"match": "analog extension",
					"name": "entity.name.function"
				},
				{
					"match": "analog (hooking (inhibit timer|timer|wait timer)|impedance|local address|local address notice)",
					"name": "entity.name.function"
				},
				{
					"match": "analog (loop-closure threshold|mp prior|off-hook call|off-hook mask|pad (receive|rtp receive|rtp send|send))",
					"name": "entity.name.function"
				},
				{
					"match": "analog (pause timer|power|rapid call|re-ringing-timer)",
					"name": "entity.name.function"
				},
				{
					"match": "analog sip (arrive (incoming-signal|myaddress|permit|restrict|restrict list|without-calling-number)|call display name|call myname|call permit)",
					"name": "entity.name.function"
				},
				{
					"match": "analog (supplementary-service|supplementary-service call-deflection (address|reject||ringer|talkie))",
					"name": "entity.name.function"
				},
				{
					"match": "analog use (1|2) (on|off|call-only|arrive-only)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "constant.numeric"
						},
						"2": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "analog wait dial timer",
					"name": "entity.name.function"
				},
				{
					"match": "ap config (directory|filename)",
					"name": "entity.name.function"
				},
				{
					"match": "ap control (config (delete|get|set)|config-auto-set use|firmware update go|http proxy (timeout|use))",
					"name": "entity.name.function"
				},
				{
					"match": "ap select",
					"name": "entity.name.function"
				},
				{
					"match": "auth user( (attribute|user group|group attribute))?",
					"name": "entity.name.function"
				}
			]
		},
		"b": {
			"patterns": [
				{
					"match": "bgp aggregate( filter)?",
					"name": "entity.name.function"
				},
				{
					"match": "bgp (autonomous-system|configure refresh|default med|force-to-advertise)",
					"name": "entity.name.function"
				},
				{
					"match": "bgp export( aspath| filter| route selection rule)?",
					"name": "entity.name.function"
				},
				{
					"match": "bgp import( filter)?",
					"name": "entity.name.function"
				},
				{
					"match": "bgp neighbor( pre-shared-key)?",
					"name": "entity.name.function"
				},
				{
					"match": "bgp (log|preference|reric interval|router id|use)",
					"name": "entity.name.function"
				},
				{
					"match": "bridge bridge learning( \\S* (static|timer)?)",
					"name": "entity.name.function"
				},
				{
					"match": "bridge member",
					"name": "entity.name.function"
				}
			]
		},
		"c": {
			"patterns": [
				{
					"match": "^call",
					"name": "entity.name.function"
				},
				{
					"match": "clear account( mobile| ngn data| pp| tunnel)?",
					"name": "entity.name.function"
				},
				{
					"match": "clear (arp|boot list|bridge learning|diagnosis config port|dns cache|dpi (cache|statistics)|ex-license|external-memory syslog|heartbeat2( id| name)?)",
					"name": "entity.name.function"
				},
				{
					"match": "clear (inarp|ip dynamic routing|ip traffic list( pp| tunnel)?|ipv6 dynamic routing|ipv6 neighbor cache|log)",
					"name": "entity.name.function"
				},
				{
					"match": "clear (mobile access limitation( pp)?|nat descriptor (dynamic|interface dynamic( pp| tunnel)?|masquerade session statistics))",
					"name": "entity.name.function"
				},
				{
					"match": "clear (pppoe pass-through learning|pri status|status|switching-hub macaddress|url filter( external-database( pp| tunnel)?| pp| tunnel)?)",
					"name": "entity.name.function"
				},
				{
					"match": "cloud vpn (bind|name|option|parameter|service|set go|syslog)",
					"name": "entity.name.function"
				},
				{
					"match": "cold start",
					"name": "entity.name.function"
				},
				{
					"match": "^connect ",
					"name": "entity.name.function"
				},
				{
					"match": "console (character|columns|info|lines)",
					"name": "entity.name.function"
				},
				{
					"match": "console prompt (\\S+)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "string"
						}
					}
				},
				{
					"match": "cooperation( bandwidth-measuring remote|load-watch (control|remote|trigger)|port|type go)?",
					"name": "entity.name.function"
				},
				{
					"match": "^copy ",
					"name": "entity.name.function"
				}
			]
		},
		"d": {
			"patterns": [
				{
					"match": "dashboard accumulate",
					"name": "entity.name.function"
				},
				{
					"match": "^date ",
					"name": "entity.name.function"
				},
				{
					"match": "^delete (config|exec)",
					"name": "entity.name.function"
				},
				{
					"match": "dhcp client ((client-identifier|hostname|option)( pool| pp)|release linkdown)",
					"name": "entity.name.function"
				},
				{
					"match": "dhcp convert lease to bind",
					"name": "entity.name.function"
				},
				{
					"match": "dhcp duplicate check",
					"name": "entity.name.function"
				},
				{
					"match": "dhcp manual (lease|release)",
					"name": "entity.name.function"
				},
				{
					"match": "dhcp relay (select|server|srcport|threshold)",
					"name": "entity.name.function"
				},
				{
					"match": "dhcp scope (bind)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"begin": "dhcp scope (option)",
					"end": "\\n",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					},
					"patterns": [
						{
							"match": "(router|dns|hostname|domain|wins_server)(=)(\\S+)",
							"captures": {
								"1": {
									"name": "variable.language"
								},
								"2": {
									"name": "keyword.operator"
								},
								"3": {
									"name": "string"
								}
							}
						}
					]
				},
				{
					"begin": "dhcp scope",
					"end": "\\n",
					"name": "entity.name.function",
					"patterns": [
						{
							"include": "#keyword"
						},
						{
							"match": "\\b(except|gateway|expire|maxexpire|infinity)\\b",
							"name": "keyword.other"
						},
						{
							"match": "\\b(-)\\b",
							"name": "keyword.operator"
						}
					]
				},
				{
					"match": "dhcp server rfc2131 compliant( except)?",
					"name": "entity.name.function"
				},
				{
					"match": "dhcp service (server|relay)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "diagnose config port (access|map)",
					"name": "entity.name.function"
				},
				{
					"match": "diagnosis config port (history-num|max-detect)",
					"name": "entity.name.function"
				},
				{
					"match": "^ disconnect ",
					"name": "entity.name.function"
				},
				{
					"match": "dns (cache max entry|cache use|host|notice order|private (address spoof|name)|srcport)",
					"name": "entity.name.function"
				},
				{
					"match": "dns domain (\\S+)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "string"
						}
					}
				},
				{
					"match": "dns server (aaa filter|fallback)?",
					"name": "entity.name.function"
				},
				{
					"match": "dns service (dhcp|pp|select)?",
					"name": "entity.name.function"
				},
				{
					"match": "(dns static) (a(aaa)?|ptr|mx|ns|cname)",
					"captures": {
						"1": {
							"name": "entity.name.function"
						},
						"2": {
							"name": "keyword"
						}
					}
				},
				{
					"match": "dpi (log|signature download (go|url)|use)",
					"name": "entity.name.function"
				}
			]
		},
		"e": {
			"patterns": [
				{
					"match": "^echo ",
					"name": "entity.name.function"
				},
				{
					"match": "embedded file (-b )?(\\S*) (<<)(\\S*)",
					"name": "storage",
					"captures": {
						"1": {
							"name": "storage"
						},
						"2": {
							"name": "string"
						},
						"3": {
							"name": "storage"
						},
						"4": {
							"name": "string"
						}
					}
				},
				{
					"match": "ethernet (\\S+)? filter",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				},
				{
					"match": "ex-license password",
					"name": "entity.name.function"
				},
				{
					"match": "execute (at-command|batch)",
					"name": "entity.name.function"
				},
				{
					"match": "external-memory (accelerator cache size|auto-search time|batch filename|boot (permit|timeout)|cache mode|config filename)",
					"name": "entity.name.function"
				},
				{
					"match": "external-memory (dpi signature directory|exec filename|performance-test go|statistics filename prefix|syslog filename)",
					"name": "entity.name.function"
				}
			]
		},
		"f": {
			"patterns": [
				{
					"match": "fr (dlci|cir|lmi|inarp|backup|compression use|confestion control)",
					"name": "entity.name.function"
				},
				{
					"match": "fr (pp dequeue type|de)",
					"name": "entity.name.function"
				}
			]
		},
		"g": {
			"patterns": []
		},
		"h": {
			"patterns": [
				{
					"match": "heartbeat (pre-shared-key|receive|send)",
					"name": "entity.name.function"
				},
				{
					"match": "heartbeat2 receive (enable|log|monitor|record limit)",
					"name": "entity.name.function"
				},
				{
					"match": "heartbeat2 transmit (enable|interval|log)",
					"name": "entity.name.function"
				},
				{
					"match": "heartbeat2 (myname|transmit|receive)",
					"name": "entity.name.function"
				},
				{
					"match": "http revision-down permit",
					"name": "entity.name.function"
				},
				{
					"match": "http revision-up (go|permit|proxy|schedule|timeout|url)",
					"name": "entity.name.function"
				},
				{
					"match": "http wwan-module-up (go|permit|timeout|url)",
					"name": "entity.name.function"
				},
				{
					"match": "httpd custom-gui api (password|use)",
					"name": "entity.name.function"
				},
				{
					"match": "httpd custom-gui (user|use)",
					"name": "entity.name.function"
				},
				{
					"match": "httpd (host|listen|proxy-access l2ms permit|service|timeout)",
					"name": "entity.name.function"
				}
			]
		},
		"i": {
			"patterns": [
				{
					"match": "import (ex-license key|sshd authorized-keys)",
					"name": "entity.name.function"
				},
				{
					"match": "interface reset",
					"name": "entity.name.function"
				},
				{
					"match": "ip keepalive",
					"name": "entity.name.function"
				},
				{
					"begin": "ip(v6)? filter",
					"end": "\\n",
					"name": "entity.name.function",
					"patterns": [
						{
							"match": "(directed-broadcast|dynamic|fqdn timer|set|source-route)",
							"name": "entity.name.function"
						},
						{
							"match": "\\b(filter)\\b",
							"name": "keyword.control"
						},
						{
							"include": "#keyword"
						}
					]
				},
				{
					"match": "ip (flow(limit|time)|forward filter|fragment remove df-bit|host)",
					"name": "entity.name.function"
				},
				{
					"match": "ip icmp (echo-reply send(-only-linkup)?|error-decrypted-ipsec send|log|mask-reply send|parameter-problem send)",
					"name": "entity.name.function"
				},
				{
					"match": "ip icmp (redirect (receive|send)|time-exceeded send|timestamp-reply send|unreachable( send|-for-truncated send))",
					"name": "entity.name.function"
				},
				{
					"match": "ip implicit-route preference",
					"name": "entity.name.function"
				},
				{
					"match": "ip inbound filter ",
					"name": "entity.name.function"
				},
				{
					"match": "ip (\\S+) (address|arp|dhcp service|dpi filter|igmp|ospf (area|neighbor)|pim|proxyarp|secondary address|traffic|vrrp|wol)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				},
				{
					"match": "ip(v6)? (\\S+) rip (auth key|auth key text|auth type|filter|force-to-advertise|hop|receive|send|trust gateway)",
					"name": "entity.name.function",
					"captures": {
						"2": {
							"name": "variable.language"
						}
					}
				},
				{
					"match": "ip(v6)? (pim|policy)",
					"name": "entity.name.function"
				},
				{
					"begin": "ip(v6)? route",
					"end": "\\n",
					"patterns": [
						{
							"include": "#keyword"
						},
						{
							"match": "(default|pp|dhcp|tunnel)",
							"name": "variable.language"
						},
						{
							"match": "gateway",
							"name": "entity.name.function"
						},
						{
							"match": "(filter|metric|hide|weight|keepalive)",
							"name": "keyword.control"
						}
					],
					"name": "entity.name.function"
				},
				{
					"begin": "ip(v6)? (\\S+) secure filter",
					"end": "\\n",
					"name": "entity.name.function",
					"captures": {
						"2": {
							"name": "variable.language"
						}
					},
					"patterns": [
						{
							"match": "dynamic",
							"name": "keyword.control"
						},
						{
							"include": "#keyword"
						}
					]
				},
				{
					"match": "ip(v6)? (\\S+) tcp (mss limit|window-scale)",
					"name": "entity.name.function",
					"captures": {
						"2": {
							"name": "keyword"
						}
					}
				},
				{
					"match": "ip (\\S+) intrusion detection",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				},
				{
					"match": "ip (\\S+) (mtu|nat descriptor)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				},
				{
					"match": "ip (\\S+) ((remote|local) address( pool)?)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				},
				{
					"begin": "ipsec ike",
					"end": "\\n",
					"name": "entity.name.function",
					"patterns": [
						{
							"match": "(always-on|auth method|backward-compatibility|child-exchange type|duration|eap myname)",
							"name": "entity.name.function"
						},
						{
							"match": "(eap request|eap send certreq|encryption|esp-encapsulation)",
							"name": "entity.name.function"
						},
						{
							"match": "(group|hash|keepalive log|license-key|license-key use)",
							"name": "entity.name.function"
						},
						{
							"match": "keepalive use (\\d+) (on|off|auto)( (heartbeat|dpd|rfc4306)+ (\\d+) (\\d+))?",
							"name": "entity.name.function",
							"captures": {
								"1": {
									"name": "constant.numeric"
								},
								"2": {
									"name": "keyword.control"
								},
								"4": {
									"name": "string"
								},
								"5": {
									"name": "string"
								}
							}
						},
						{
							"match": "(local|remote) (address|id|name) (\\d+)",
							"name": "entity.name.function",
							"captures": {
								"3": {
									"name": "constant.numeric"
								}
							}
						},
						{
							"match": "(log|message-id-control|mode-cfg address|mode-cfg address pool|mode-cfg method|nat-traversal)",
							"name": "entity.name.function"
						},
						{
							"match": "(negotiate-strictly|negotiation receive|payload type|pfs|pki file)",
							"name": "entity.name.function"
						},
						{
							"match": "pre-shared-key (\\d+) (text){0,1} (\\S+)",
							"name": "entity.name.function",
							"captures": {
								"1": {
									"name": "constant.numeric"
								},
								"2": {
									"name": "constant.language"
								},
								"3": {
									"name": "string"
								}
							}
						},
						{
							"match": "(proposal-limitation|queue length|restrict-dangling-sa|retry|send info|version|xauth myname|xauth request)",
							"name": "entity.name.function"
						},
						{
							"include": "#keyword"
						}
					]
				},
				{
					"match": "ipsec (auto refresh|ipsec ipcomp type|log illegal-spi|refresh sa|sa delete|transport template|transport|use)",
					"name": "entity.name.function"
				},
				{
					"match": "ipsec sa policy (\\d+) (\\d+) esp (3des-cbc|des-cbc|aes-cbc|aes256-cbc)+ (md5-hmac|sha-hmac|sha256-hmac)+",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "constant.numeric"
						},
						"2": {
							"name": "constant.numeric"
						},
						"3": {
							"name": "string"
						},
						"4": {
							"name": "string"
						}
					}
				},
				{
					"match": "ipsec tunnel( (fastpath-fragment-function follow df-bit|outer df-bit))?",
					"name": "entity.name.function"
				},
				{
					"match": "ipip keepalive (log|use)",
					"name": "entity.name.function"
				},
				{
					"match": "ipv6 (\\S+) (address|dad retry count|dhcp service|dpi filter|icmp-nd queue length|mld( static)?)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				},
				{
					"match": "ipv6 (\\S+) (mtu|neighbor cache max entry|ospf area|rtsol max-retransmit|vrrp|vrrp shutdown trigger)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				},
				{
					"begin": "ipv6 (\\S+) rtadv send",
					"end": "\\n",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					},
					"patterns": [
						{
							"match": "\\b(m_flag|o_flag)(=)(on|off)\\b",
							"captures": {
								"1": {
									"name": "variable.language"
								},
								"2": {
									"name": "keyword.operator"
								},
								"3": {
									"name": "keyword.control"
								}
							}
						},
						{
							"match": "\\b(prfflag)(=)(high|medium|low)\\b",
							"captures": {
								"1": {
									"name": "variable.language"
								},
								"2": {
									"name": "keyword.operator"
								},
								"3": {
									"name": "keyword.control"
								}
							}
						},
						{
							"match": "\\b(max-rtr-adv-interval|min-rtr-adv-interval|adv-default-lifetime|adv-reachable-time|adv-retrans-time|adv-cur-hop-limit)(=)(\\d)\\b",
							"captures": {
								"1": {
									"name": "variable.language"
								},
								"2": {
									"name": "keyword.operator"
								},
								"3": {
									"name": "keyword.control"
								}
							}
						},
						{
							"match": "\\b(mtu)(=)(auto|off|\\d+)\\b",
							"captures": {
								"1": {
									"name": "variable.language"
								},
								"2": {
									"name": "keyword.operator"
								},
								"3": {
									"name": "keyword.control"
								},
								"4": {
									"name": "constant.numeric"
								}
							}
						},
						{
							"match": "\\b(rdnss)(=)(rdnss|off|dhcpv6)\\b",
							"captures": {
								"1": {
									"name": "variable.language"
								},
								"2": {
									"name": "keyword.operator"
								},
								"3": {
									"name": "keyword.control"
								}
							}
						},
						{
							"match": "\\b(\\d+)\\b",
							"name": "constant.numeric"
						}
					]
				},
				{
					"match": "ipv6 (\\S+) prefix change log (on|off)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						},
						"2": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "ipv6 (\\S+) prefix",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				},
				{
					"match": "ipv6 prefix",
					"name": "support.function"
				},
				{
					"match": "isdn (arrive permit|auto connect)",
					"name": "entity.name.function"
				},
				{
					"match": "isdn call (block time|permit|prohibit time)",
					"name": "entity.name.function"
				},
				{
					"match": "isdn callback (mscbcp user-specify|(permit|request)( type)?|(response|wait) time)",
					"name": "entity.name.function"
				},
				{
					"match": "isdn disconnect ((input|interval|output) time|(policy|time))",
					"name": "entity.name.function"
				},
				{
					"match": "isdn (fast|forced) disconnect time",
					"name": "entity.name.function"
				},
				{
					"match": "isdn (local|remote) address",
					"name": "entity.name.function"
				},
				{
					"match": "isdn (remote call order|terminator)",
					"name": "entity.name.function"
				}
			]
		},
		"j": {
			"patterns": [
				{
					"match": "^\\b(jate number)\\b",
					"name": "entity.name.function"
				}
			]
		},
		"l": {
			"patterns": [
				{
					"match": "l2tp (always-on|hostname|keepalive log|keepalive use|local router-id|remote end-id|remote router-id|service|tunnel auth|tunnel disconnect time)",
					"name": "entity.name.function"
				},
				{
					"match": "lan (backup|count-hub-overflow|flexible-port|keepalive interval|link-aggregation static|linkup send-wait-time|port-mirroring|port type|port shutdown|receive-buffer-size|shutdown|type)",
					"name": "entity.name.function"
				},
				{
					"match": "lan-map (log|snapshot use|sysname|terminal watch interval)",
					"name": "entity.name.function"
				},
				{
					"match": "leased (backupkeepalive down)",
					"name": "entity.name.function"
				},
				{
					"match": "less (config (ap|list|pp|switch|tunnel)?|(exec|file) list|log)",
					"name": "entity.name.function"
				},
				{
					"match": "license (authentication go|authentication retry interval)",
					"name": "entity.name.function"
				},
				{
					"match": "line (masterclock|type)",
					"name": "entity.name.function"
				},
				{
					"match": "login(( password( encrypted)?)| radius use| timer| user)",
					"name": "entity.name.function"
				},
				{
					"match": "lua(c| (use)?)",
					"name": "entity.name.function"
				}
			]
		},
		"m": {
			"patterns": [
				{
					"match": "mail (notify( status exec)?|server (name|pop|smtp|timeout)|template)",
					"name": "entity.name.function"
				},
				{
					"match": "make directory",
					"name": "entity.name.function"
				},
				{
					"match": "mobile access( limit (connection (length|time)|duration|length|time)|-point name)",
					"name": "entity.name.function"
				},
				{
					"match": "mobile arrive (permit|use)",
					"name": "entity.name.function"
				},
				{
					"match": "mobile call (prohibit auth-error count|type)",
					"name": "entity.name.function"
				},
				{
					"match": "mobile (auto connect|carrier mode|dial number)",
					"name": "entity.name.function"
				},
				{
					"match": "mobile disconnect( input| output)? time",
					"name": "entity.name.function"
				},
				{
					"match": "mobile (display caller id|firmware update go|pin code|signal-strength( go)?|syslog|use)",
					"name": "entity.name.function"
				}
			]
		},
		"n": {
			"patterns": [
				{
					"match": "nat descriptor address (outer|inner)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "nat descriptor type (\\d+) (none|nat|masquerade|nat-masquerade)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "constant.numeric"
						},
						"2": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "nat descriptor (ftp port|log|sip|timer|static|backward-compatibility)",
					"name": "entity.name.function"
				},
				{
					"match": "nat descriptor masquerade (incoming|port range|remove df-bit|rlogin|session limit( total)?|static|unconvertible port)",
					"name": "entity.name.function"
				},
				{
					"match": "nat46 (ip address pool|ipv6 prefix|static)",
					"name": "entity.name.function"
				},
				{
					"match": "netvolante-dns ((auto|set) hostname|get hostname list|auto save|delete go|go)",
					"name": "entity.name.function"
				},
				{
					"match": "netvolante-dns (hostname host|port|register timer|retry interval)",
					"name": "entity.name.function"
				},
				{
					"match": "netvolante-dns (server( update address (port|use))?|timeout|use)",
					"name": "entity.name.function"
				},
				{
					"match": "ngn (radius (account (callee|caller))|auth password|renumbering link-refresh|type)",
					"name": "entity.name.function"
				},
				{
					"match": "ntp (backward-compatibility|local address)",
					"name": "entity.name.function"
				},
				{
					"match": "ntpdate \\b(\\S+)\\b(\\ssyslog)?",
					"name": "keyword",
					"captures": {
						"1": {
							"name": "string"
						},
						"2": {
							"name": "keyword.control"
						}
					}
				}
			]
		},
		"o": {
			"patterns": [
				{
					"match": "operation (button function download|execute batch permit|external-memory download permit|http revision-up permit)",
					"name": "entity.name.function"
				},
				{
					"match": "^ospf area( network|stubhost)?",
					"name": "entity.name.function"
				},
				{
					"match": "ospf configure refresh",
					"name": "entity.name.function"
				},
				{
					"match": "ospf (export|import) (filter|from) (ospf)?",
					"name": "entity.name.function"
				},
				{
					"match": "ospf (log|merge equal cost stub|preference|reric interval|router id|use|virtual-link)",
					"name": "entity.name.function"
				}
			]
		},
		"p": {
			"patterns": [
				{
					"match": "packetdump ",
					"name": "entity.name.function"
				},
				{
					"match": "pki (certificate file|crl file)",
					"name": "entity.name.function"
				},
				{
					"match": "pp auth accept (pap|chap|mschap|mschap-v2)( (pap|chap|mschap|mschap-v2))?",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						},
						"2": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "pp auth (myname|username) (\\S+) (\\S+)",
					"name": "entity.name.function",
					"captures": {
						"2": {
							"name": "string"
						},
						"3": {
							"name": "string"
						}
					}
				},
				{
					"match": "pp (enable|disable|select)",
					"name": "storage.type",
					"captures": {
						"2": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "pp (always-on|auth|auth request|backup|bind|encapsulation|keepalive interval|keepalive log|keepalive use)",
					"name": "entity.name.function"
				},
				{
					"match": "ppp (lcp mru|ccp type|ipcp msext|ipcp ipaddress)",
					"name": "entity.name.function"
				},
				{
					"match": "ppp (bacp|bap|ccp|chap|ipcp|ipv6cp|lcp|mp|mscbcp|pap)",
					"name": "entity.name.function"
				},
				{
					"match": "pppoe (access concentrator|auto connect|auto disconnect|call prohibit auth-error count|disconnect time|invalid-session forced close)",
					"name": "entity.name.function"
				},
				{
					"match": "pppoe (padi maxretry|padi restart|padr maxretry|padr restart|pass-through member|service-name|tcp mss limit|use)",
					"name": "entity.name.function"
				},
				{
					"match": "pptp (hostname|keepalive (interval|log|use)|service( type)?|tunnel disconnect time|vendorname|window size)",
					"name": "entity.name.function"
				},
				{
					"match": "pri (leased channel|loopback (active|passive))",
					"name": "entity.name.function"
				},
				{
					"match": "provider auto connect forced disable",
					"name": "entity.name.function"
				},
				{
					"match": "provider dns server( pp)?",
					"name": "entity.name.function"
				},
				{
					"match": "provider filter routing",
					"name": "entity.name.function"
				},
				{
					"match": "provider (\\S*) (bind|dns server|name)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				},
				{
					"match": "provider (ipv6 connect pp|ntp server|ntpdate|select|set|type)",
					"name": "entity.name.function"
				}
			]
		},
		"q": {
			"patterns": [
				{
					"match": "qac-tm (client (permit|port|refresh go|update)|port|redirect|server (refresh go)?|unqualified client access control|use|version margin|warning url)",
					"name": "entity.name.function"
				},
				{
					"match": "queue class filter",
					"name": "entity.name.function"
				},
				{
					"match": "queue (\\S+) (class (control|filter list|property)|default class( secondary)?|length( secondary)?|type)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				}
			]
		},
		"r": {
			"patterns": [
				{
					"match": "radius ((account|auth)( port| server)?|retry|secret|server)",
					"name": "entity.name.function"
				},
				{
					"match": "remote setup( accept)?",
					"name": "entity.name.function"
				},
				{
					"match": "rip (advertise mode|filter rule|preference|timer|use)",
					"name": "entity.name.function"
				},
				{
					"match": "(rollback timer|rotate external-memory syslog|rtfs format|rtfs garbage-collect)",
					"name": "entity.name.function"
				}
			]
		},
		"s": {
			"patterns": [
				{
					"match": "\\b(schedule at|sd use|security class|set-default-(config|exec)|set-serial-baudrate|sftpd host|switching-hub macaddress-aging)\\b",
					"name": "entity.name.function"
				},
				{
					"match": "^show \\S*",
					"name": "entity.name.function"
				},
				{
					"match": "sip (100rel|codec permit|ip protocol|log|use|user agent|outer address|request retransmit timer|response code busy)",
					"name": "entity.name.function"
				},
				{
					"match": "sip arrive (address check|name-display default|ringing p-n-uatype|session timer method|session timer refresher)",
					"name": "entity.name.function"
				},
				{
					"match": "sip netvolante dial (domain|figure)",
					"name": "entity.name.function"
				},
				{
					"match": "sip server (100rel|analog service|arrive number display|call (mode|own permit|remote domain|server error)|connect)",
					"name": "entity.name.function"
				},
				{
					"match": "sip server (dial number-only|disconnect|display name|pilot address|privacy|qvalue|session timer)",
					"name": "entity.name.function"
				},
				{
					"match": "sip server register (contact mode|request-uri|timer)",
					"name": "entity.name.function"
				},
				{
					"match": "sip (server|session timer)",
					"name": "entity.name.function"
				},
				{
					"match": "snmp community (read-only|read-write) (\\S+)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						},
						"2": {
							"name": "string"
						}
					}
				},
				{
					"match": "snmp sys(contact|name|location) (\\S+)",
					"name": "entity.name.function",
					"captures": {
						"2": {
							"name": "string"
						}
					}
				},
				{
					"match": "snmp trap community (\\S+)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "string"
						}
					}
				},
				{
					"match": "snmp trap enable snmp (all)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "string"
						}
					}
				},
				{
					"begin": "snmp trap enable snmp",
					"end": "\\n",
					"name": "entity.name.function",
					"patterns": [
						{
							"match": "((coldstart|warmstart|linkdown|linkup|authenticationfailure)+)",
							"captures": {
								"1": {
									"name": "string"
								}
							}
						}
					]
				},
				{
					"match": "snmp trap enable switch (\\S+) (all|none)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						},
						"2": {
							"name": "string"
						}
					}
				},
				{
					"begin": "snmp trap enable switch (\\S+)",
					"end": "\\n",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					},
					"patterns": [
						{
							"match": "((linkup|linkdown|fanlock|loopdetect|poesuppply|poeterminate|oversupply|overtemp|powerfailure)+)",
							"captures": {
								"1": {
									"name": "string"
								}
							}
						}
					]
				},
				{
					"match": "snmp trap (cpu threshold|delay-timer|host|link-updown separate-l2switch-port|memory threshold|mobile signal-strength|send linkdown pp|send linkdown tunnel|send linkdown)",
					"name": "entity.name.function"
				},
				{
					"match": "snmp (display|host|ifindex|local)",
					"name": "entity.name.function"
				},
				{
					"match": "snmp (yrifppdisplayatmib2|yrifswitchdisplayatmib2|yriftunneldisplayatmib2)",
					"name": "entity.name.function"
				},
				{
					"match": "snmpv2c (community read-(only|write)|host|trap (community|host))",
					"name": "entity.name.function"
				},
				{
					"match": "snmpv3 (context name|engine id|host|trap host|usm user|vacm access|vacm view)",
					"name": "entity.name.function"
				},
				{
					"match": "sntpd (host|service)",
					"name": "entity.name.function"
				},
				{
					"match": "speed (\\S+)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				},
				{
					"match": "ssh (encrypt algorithm|known hosts)",
					"name": "entity.name.function"
				},
				{
					"match": "sshd (auth method|authorized-keys filename|client alive|encrypt algorithm|hide openssh version|host|host key generate|listen|service|session)",
					"name": "entity.name.function"
				},
				{
					"match": "statistics (cpu|memory|traffic|flow|nat|route|filter|qos|application)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				},
				{
					"match": "switch control mode (master|slave|off)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control use (\\S+) (on|off)( (terminal)(=)(on|off))?",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						},
						"2": {
							"name": "keyword.control"
						},
						"4": {
							"name": "variable.language"
						},
						"5": {
							"name": "keyword.operator"
						},
						"6": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control function (get) (boot-rom-version|firmware-revision|lag-type|model-name|serial-number)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control function (get) status-(combo-port|counter-(frame|octet)-(rx|tx)|fan(-rpm)?|led-mode|loopdetect-(port|recovery-timer)|macaddress-(addr|port)|poe-(detect-class|state|supply(-detail|-total)?|temperature|sfp-rx-power)|port-speed)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control function (get) system-(macaddress|uptime)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control function (get|set) counter-frame-(rx|tx)-type",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control function (get|set) (energy-saving|led-brightness)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control function (get|set) loopdetect-(count|linkdown|port-use|recovery-timer|time|use-control-packet)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control function (get|set) macaddress-aging(-timer)?",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control function (get|set) mirroring-(dest|src-(rx|tx)|use)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control function (get|set) poe-class",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control function (get|set) port-(auto-crossover|blocking-(control|data)-packet|flow-control|speed(-downshift)?|use)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control function (get|set) qos-(dscp-remark-(class|type)|(policing|shaping)-(speed|use)|speed-unit)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control function (get|set) system-name",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch control function (get|set) vlan-(access|id|multiple(-use)?|port-mode|trunk)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "switch select (\\S+)",
					"name": "storage.type",
					"captures": {
						"1": {
							"name": "string"
						}
					}
				},
				{
					"match": "syslog (debug|info|notice|execute command)",
					"name": "entity.name.function"
				},
				{
					"match": "syslog (srcport|host|local address)",
					"name": "entity.name.function"
				},
				{
					"match": "\\S* (syslog)",
					"name": "entity.name.function"
				},
				{
					"match": "system (packet-(buffer|scheduling( filter( list)?)?)|(cpu|memory|temperature) threshold|led brightness)",
					"name": "entity.name.function"
				}
			]
		},
		"t": {
			"patterns": [
				{
					"match": "take lan-map snapshot ",
					"name": "entity.name.function"
				},
				{
					"match": "^tcp (log|session limit)",
					"name": "entity.name.function"
				},
				{
					"match": "^telnetd (host|listen|service|session)",
					"name": "entity.name.function"
				},
				{
					"match": "^terminate lua( file)?",
					"name": "entity.name.function"
				},
				{
					"match": "^tftp host",
					"name": "entity.name.function"
				},
				{
					"match": "^time(zone)?",
					"name": "entity.name.function"
				},
				{
					"match": "tunnel (enable|disable|select)",
					"name": "storage.type",
					"captures": {
						"2": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "tunnel encapsulation (ipsec|ipip|pptp|l2tpv3-raw|l2tpv3|l2tp|ipudp|map-e)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "tunnel (backup|endpoint (name|local|remote|address)( address)?|map-e type|multipoint (limit|local name|server)|ngn|template|translation|tunnel type)",
					"name": "entity.name.function"
				}
			]
		},
		"u": {
			"patterns": [
				{
					"match": "unlock (wwan pin-code|wwan-module firmware)",
					"name": "entity.name.function"
				},
				{
					"match": "upnp external address (refer pp|refer)",
					"name": "entity.name.function"
				},
				{
					"match": "upnp port mapping (timer type|timer)",
					"name": "entity.name.function"
				},
				{
					"match": "upnp use",
					"name": "entity.name.function"
				},
				{
					"match": "url filter (log|port|reject|use)",
					"name": "entity.name.function"
				},
				{
					"match": "url (filter|pp filter|tunnel filter)",
					"name": "entity.name.function"
				},
				{
					"match": "url (\\S) filter",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "variable.language"
						}
					}
				},
				{
					"match": "usbhost (modem flow control|modem initialize|overcurrent duration|use)",
					"name": "entity.name.function"
				},
				{
					"match": "user attribute",
					"name": "entity.name.function"
				}
			]
		},
		"v": {
			"patterns": [
				{
					"match": "vlan port mapping",
					"name": "entity.name.function"
				},
				{
					"begin": "(vlan) (\\S+)",
					"end": "\\n",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function"
						},
						"2": {
							"name": "variable.language"
						}
					},
					"patterns": [
						{
							"match": "802\\.1q",
							"name": "entity.name.function"
						},
						{
							"match": "(vid|name)(=)(\\S+)",
							"captures": {
								"1": {
									"name": "variable.language"
								},
								"2": {
									"name": "keyword.operator"
								},
								"3": {
									"name": "string"
								}
							}
						}
					]
				}
			]
		},
		"w": {
			"patterns": [
				{
					"match": "wan access limit (connection length|connection time|duration|length|time)",
					"name": "entity.name.function"
				},
				{
					"match": "wan (access-point name|always-on|auth myname|auto connect|bind)",
					"name": "entity.name.function"
				},
				{
					"match": "wan disconnect (input time|output time|time)",
					"name": "entity.name.function"
				},
				{
					"match": "wins server",
					"name": "entity.name.function"
				},
				{
					"match": "wol send",
					"name": "entity.name.function"
				},
				{
					"match": "wwan access limit (connection length|connection time|duration|length|time)",
					"name": "entity.name.function"
				},
				{
					"match": "wwan (access-point name|always-on|auth accept|auth myname|auto connect|disable)",
					"name": "entity.name.function"
				},
				{
					"match": "wwan disconnect (input time|output time|time)",
					"name": "entity.name.function"
				},
				{
					"match": "wwan (enable|pin code|radio access technology|select)",
					"name": "entity.name.function"
				},
				{
					"match": "wwan-module (radio-power|signal-strength go|signal-strength|syslog|use)",
					"name": "entity.name.function"
				}
			]
		},
		"y": {
			"patterns": [
				{
					"match": "yno (access code|gui-forwarder timeout|https-proxy)",
					"name": "entity.name.function"
				},
				{
					"match": "yno las (connection keepalive|request retry|request timeout|syslog queue length)",
					"name": "entity.name.function"
				},
				{
					"match": "yno (log|use|xmpp connection keepalive|zero-config id)",
					"name": "entity.name.function"
				}
			]
		},
		"z": {
			"patterns": []
		},
		"wlx-a": {
			"patterns": [
				{
					"match": "airlink configure refresh",
					"name": "entity.name.function"
				},
				{
					"match": "airlink (enable|select|disable) (all|module\\S|\\S+|none)",
					"name": "storage.type",
					"captures": {
						"2": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "airlink emergency-mode",
					"name": "entity.name.function"
				},
				{
					"match": "airlink (mode|channel|beacon)",
					"name": "entity.name.function"
				},
				{
					"match": "airlink optimization use",
					"name": "entity.name.function"
				},
				{
					"match": "airlink macaddress filter list",
					"name": "entity.name.function"
				},
				{
					"match": "airlink macaddress filter use",
					"name": "entity.name.function"
				},
				{
					"match": "airlink (ssid|vlan-id|bind|auth|radius (auth|server|secret)|psk-key|privacy)",
					"name": "entity.name.function"
				}
			]
		},
		"wlx-c": {
			"patterns": [
				{
					"match": "cluster config-id",
					"name": "entity.name.function"
				},
				{
					"match": "cluster cluster-mode (auto-cluster|standalone)",
					"name": "entity.name.function",
					"captures": {
						"1": {
							"name": "keyword.control"
						}
					}
				},
				{
					"match": "cluster virtual-ip address",
					"name": "entity.name.function"
				}
			]
		},
		"wlx-l": {
			"patterns": [
				{
					"match": "led blink",
					"name": "entity.name.function"
				}
			]
		},
		"wlx-r": {
			"patterns": [
				{
					"match": "radiusd (use|reauth|client|user)",
					"name": "entity.name.function"
				}
			]
		},
		"wlx-v": {
			"patterns": [
				{
					"match": "vlan-access (\\S+) (\\d+)",
					"name": "support.function",
					"captures": {
						"1": {
							"name": "variable.language"
						},
						"2": {
							"name": "constant.numeric"
						}
					}
				},
				{
					"match": "vlan-id (\\d+) (\\d+)",
					"name": "support.function",
					"captures": {
						"1": {
							"name": "constant.numeric"
						},
						"2": {
							"name": "constant.numeric"
						}
					}
				},
				{
					"match": "vlan-port-mode",
					"name": "support.function"
				},
				{
					"match": "vlan-trunk (\\S+) (\\d+) (join|leave)",
					"name": "support.function",
					"captures": {
						"1": {
							"name": "variable.language"
						},
						"2": {
							"name": "constant.numeric"
						},
						"3": {
							"name": "variable.language"
						}
					}
				}
			]
		},
		"wlx-w": {
			"patterns": [
				{
					"match": "wlan-controller config set",
					"name": "support.function"
				},
				{
					"match": "wlan-controller select",
					"name": "storage.type"
				},
				{
					"match": "wlan-controller (member-ap|serial|system name|ip address)",
					"name": "support.function"
				}
			]
		}
	},
	"scopeName": "text.yamahart"
}